# Generated by Django 5.2.4 on 2025-08-17 23:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\d{5}$')])),
                ('purpose', models.CharField(choices=[('register', 'Register'), ('reset_password', 'Reset Password')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the user.', primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('use_email_as_user_ID', models.BooleanField(default=False, help_text='Use email as username for login.')),
                ('first_name', models.CharField(blank=True, help_text='First name of the user.', max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name of the user.', max_length=50, null=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('instructor', 'Instructor'), ('sponsor', 'Sponsor'), ('admin', 'Admin'), ('temp_user', 'Temporary User')], default='temp_user', help_text='Role of the user in the system.', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number of the admin.', max_length=15, null=True)),
                ('address', models.TextField(blank=True, help_text='Address of the admin.', null=True)),
                ('profile_picture', models.TextField(blank=True, help_text='Profile picture of the admin.', null=True)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number of the instructor.', max_length=15, null=True)),
                ('address', models.TextField(blank=True, help_text='Address of the instructor.', null=True)),
                ('bio', models.TextField(blank=True, help_text='Short biography of the instructor.', null=True)),
                ('profile_picture', models.TextField(blank=True, help_text='Profile picture of the instructor.', null=True)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'instructor'}, on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the certification.', max_length=255)),
                ('issuer', models.CharField(blank=True, help_text='Issuer of the certification.', max_length=255, null=True)),
                ('date_awarded', models.DateField(blank=True, null=True)),
                ('expires_at', models.DateField(blank=True, help_text='Expiration date of the certification.', null=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='users.instructor')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number of the sponsor.', max_length=15, null=True)),
                ('address', models.TextField(blank=True, help_text='Address of the sponsor.', null=True)),
                ('profile_picture', models.TextField(blank=True, help_text='Profile picture of the sponsor.', null=True)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'sponsor'}, on_delete=django.db.models.deletion.CASCADE, related_name='sponsor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, help_text='Phone number of the student.', max_length=15, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], help_text='Gender of the student.', max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth of the student.', null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, help_text='Location of the student.', max_length=100, null=True)),
                ('profile_picture', models.TextField(blank=True, help_text='Profile picture of the student.', null=True)),
                ('current_school', models.CharField(blank=True, help_text='Current school of the student.', max_length=100, null=True)),
                ('current_grade', models.CharField(blank=True, help_text='Current grade of the student.', max_length=50, null=True)),
                ('linked_sponsor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_wards', to='users.sponsor')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
